# Generated by Django 5.0 on 2024-03-02 04:06

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=10, verbose_name='カテゴリ名')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100, verbose_name='店舗名')),
                ('price_max', models.PositiveIntegerField(default='0', verbose_name='価格（最大）')),
                ('price_min', models.PositiveIntegerField(default='0', verbose_name='価格（最小）')),
                ('seat', models.PositiveIntegerField(default='0', verbose_name='座席数')),
                ('address', models.CharField(default='', max_length=200, verbose_name='住所')),
                ('tel', models.CharField(default='', max_length=11, verbose_name='電話番号')),
                ('open_time', models.TimeField(default='', verbose_name='営業時間(開始)')),
                ('close_time', models.TimeField(default='', verbose_name='営業時間(終了)')),
                ('close_day', models.CharField(default='', max_length=20, verbose_name='定休日')),
                ('catch_copy', models.CharField(default='', max_length=30, verbose_name='キャッチコピー')),
                ('explanation', models.TextField(default='', max_length=300, verbose_name='説明')),
                ('img', models.ImageField(blank=True, default='img/noImage.png', upload_to='', verbose_name='店舗画像')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='登録日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NagoyameshiApp.category', verbose_name='カテゴリ')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('furigana', models.CharField(default='', max_length=50, verbose_name='フリガナ')),
                ('birthday', models.DateField(default='', verbose_name='生年月日')),
                ('zipcode', models.CharField(default='', max_length=8, verbose_name='郵便番号')),
                ('address', models.CharField(default='', max_length=100, verbose_name='住所')),
                ('tel', models.CharField(default='', max_length=13, verbose_name='電話番号')),
                ('works', models.CharField(blank=True, default='', max_length=20, verbose_name='ご職業')),
                ('subscription', models.BooleanField(default='False', verbose_name='サブスク契約')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
